<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
마이바티스에서 실행할 SQL 구문을 갖는 xxxMapper.xml 파일 정의
=> 실행할 각 구문의 이름을 태그로 제공함(insert, update, delete, select 등)
   (내부적으로 PreparedStatement 객체를 통해 SQL 구문을 실행함)
=> 주의! mapper 태그 내의 namespace 속성에 현재 XML 파일과 연결될 자바 인터페이스를 명시해야한다!
   ex) <mapper namespace="패키지명.인터페이스명">
   (존재하지 않는 인터페이스(오타 등)라도 오류가 표시되지 않음)
=> 주의! 각 태그 내의 id 속성에 지정될 이름은 Mapper 인터페이스 내의 메서드명과 일치해야한다!
   (일치하는 id 없을 경우 BindingException 발생)
-->      
<mapper namespace="com.itwill.billycar.mapper.MemberMapper">
	<insert id="insertMember">
		INSERT INTO member
		VALUES (
			null
			, #{member_id}
			, #{member_name}
			, #{member_passwd}
			, #{member_email}
			, #{member_birth}
			, #{member_phone}
			, now()
			, DEFAULT
			, #{inviter}
			, DEFAULT
		)
	</insert>
	
<!-- 	<select id="selectCorrectUser" resultType="boolean"> -->
<!-- 		SELECT IF(COUNT(*) = 1, 1, 0) FROM member WHERE member_id = #{member_id} AND member_passwd = #{member_passwd} -->
<!-- 	</select> -->
	
	<select id="selectMember" resultType="com.itwill.billycar.vo.MemberVO">
			SELECT * FROM member WHERE member_id = #{member_id}
	</select>
	
	<select id="selectCheckID" resultType="boolean">
		SELECT IF(COUNT(*) = 1, 1, 0) FROM member WHERE member_id = #{member_id}
	</select>
	
	<select id="selectForgotId" resultType="com.itwill.billycar.vo.MemberVO">
		SELECT CONCAT(LEFT(member_id,4), '****') AS member_id    
		  FROM member 
		 WHERE 1=1
		   AND member_name = #{member_name}  
		   AND member_email = #{member_email}
	</select>
	
	<select id="selectMemberCount">
		SELECT count(member_idx) FROM member
	</select>
	
	<select id="selectTodayMember">
		SELECT COUNT(*)
		FROM member
		WHERE DATE(member_reg_date) = CURDATE()
	</select>
	
	<select id="selectMailAuthInfo" resultType="hashmap">
		SELECT *
		FROM mail_auth_info
		WHERE 
			member_email = #{member_email}
	</select>
	
	<!-- 이메일 인증 정보 등록 - INSERT -->
	<insert id="insertMailAuthInfo">
		INSERT
		INTO mail_auth_info
		VALUES (
			#{member_email}
			, #{auth_code}
		)
	</insert>
	
	<!-- 이메일 인증 정보 수정 - UPDATE -->
	<!-- id 에 해당하는 auth_code 컬럼값을 전달받은 코드값으로 변경 -->
	<update id="updateMailAuthInfo">
		UPDATE mail_auth_info
		SET 
			auth_code = #{auth_code}
		WHERE
			member_email = #{member_email}
	</update>
	
</mapper>
















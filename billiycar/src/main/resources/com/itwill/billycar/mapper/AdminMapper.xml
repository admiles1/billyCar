<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
마이바티스에서 실행할 SQL 구문을 갖는 xxxMapper.xml 파일 정의
=> 실행할 각 구문의 이름을 태그로 제공함(insert, update, delete, select 등)
   (내부적으로 PreparedStatement 객체를 통해 SQL 구문을 실행함)
=> 주의! mapper 태그 내의 namespace 속성에 현재 XML 파일과 연결될 자바 인터페이스를 명시해야한다!
   ex) <mapper namespace="패키지명.인터페이스명">
   (존재하지 않는 인터페이스(오타 등)라도 오류가 표시되지 않음)
=> 주의! 각 태그 내의 id 속성에 지정될 이름은 Mapper 인터페이스 내의 메서드명과 일치해야한다!
   (일치하는 id 없을 경우 BindingException 발생)
-->      
<mapper namespace="com.itwill.billycar.mapper.AdminMapper">
	<select id="selectMember" resultType="com.itwill.billycar.vo.AdminVO">
		select * from admin where admin_id = #{admin_id} AND admin_passwd = #{admin_passwd};
	</select>
	
	<select id="adminMemberList" resultType="com.itwill.billycar.vo.MemberVO">
		select * from member where 1=1
		
		<if test="searchType.equals('name')">
			AND member_name LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		
		<if test="searchType.equals('id')">
			AND member_id LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		
		<if test="searchType.equals('status')">
			AND member_status LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		
		LIMIT #{startRow},#{listLimit}
	</select>
	
	<select id="getMemberCount">
		select count(*) from member where 1=1
		
		<if test="searchType.equals('name')">
			AND member_name LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		
		<if test="searchType.equals('id')">
			AND member_id LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
		
		<if test="searchType.equals('status')">
			AND member_status LIKE CONCAT('%', #{searchKeyword}, '%')
		</if>
	</select>
	
<!-- 	<select id="adminBlackList" resultType="com.itwill.billycar.vo.MemberVO"> -->
<!-- 		select * from member where member_status = 3; -->
<!-- 	</select> -->

	
	<!-- 자동차 등록 -->
	<insert id="insertCar">
		INSERT INTO car
		VALUES (
			null
			, #{car_number}
			, #{car_model}
			, #{car_maker}
			, #{car_fuel}
			, #{car_type}
			, #{gear_type}
			, #{car_capacity}
			, #{car_img}
			, #{car_year}
			, #{car_price}
			, 0
			, 0
			, now()
		)
	</insert>
	<update id="updateMember" parameterType="int">
		UPDATE member SET member_id = #{member_id}
		
		<if test="member_status == 1">
			,member_status = 1
		</if>
		<if test="member_status == 2">
			,member_status = 2
		</if>
		<if test="member_status == 3">
			,member_status = 3
		</if>
		<if test="member_status == 4">
			,member_status = 4
		</if>
		where member_id = #{member_id}
	</update>
	
	<select id="selectCar" resultType="com.itwill.billycar.vo.CarVO">
		SELECT *
		FROM car
	
	
	</select>
	
</mapper>
















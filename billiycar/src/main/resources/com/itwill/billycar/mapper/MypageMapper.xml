<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- <mapper namespace="com.itwill.billycar.mapper.MypageMapper"> -->
<!-- 	<select id="selectMember" resultType="com.itwill.billycar.vo.MemberVO"> -->
<!-- 		Select *  -->
<!-- 		FROM member -->
<!-- 		WHERE member_idx = #{member_idx} -->
<!-- 	</select> -->
<!-- </mapper> -->

<mapper namespace="com.itwill.billycar.mapper.MypageMapper">
    
    <select id="selectMemberInfo" parameterType="String" resultType="com.itwill.billycar.vo.MemberVO">
        SELECT *
        FROM member
        WHERE member_id = #{memberId}
    </select>
    
    <select id="selcetMemberQna" resultType="com.itwill.billycar.vo.QnaVO">
		SELECT *, 
			 ROW_NUMBER() OVER (ORDER BY qna_date DESC) AS new_qna_idx
		FROM qna
		WHERE qna_writer = #{memberId}
	</select>
    
    <insert id="insertLicense">
    	INSERT INTO license
    	VALUES (
    		   #{license_id}
    		 , #{license_user_id}
    		 , #{license_name}
    		 , #{license_issue_date}
    		 , #{license_expiration_date}
    		 )
    		 
  		 ON DUPLICATE KEY UPDATE
        		license_user_id = VALUES(license_user_id),
		        license_name = VALUES(license_name),
		        license_issue_date = VALUES(license_issue_date),
		        license_expiration_date = VALUES(license_expiration_date);
    </insert>

    <update id="withdrawMember">
    	UPDATE member
    	SET 
    		member_status = 3
		WHERE 
			member_id = #{member_id}    		
    </update>
    
    <update id="updateInfo">
		UPDATE member
		SET
			member_email = #{member_email}
		  , member_phone = #{member_phone}
		WHERE
			member_id = #{member_id}
	</update>
	
	<update id="updateLicenseStatus">
		UPDATE member
		SET 
			member_license_checked = 1
		WHERE 
			member_id = #{member_id}
	</update>
	
	
	<select id="compareLicense" resultType="int">
		SELECT count(*) 
		FROM license_standard
		WHERE license_sd_id = #{license_user_id}
		AND license_sd_issue_date = #{license_issue_date}
		AND license_sd_expiration_date = #{license_expiration_date}
	</select>
	
	<select id="getMemberLicense">
		SELECT *
		FROM license
		WHERE license_id = #{memberId}
	</select>
	
	<select id="selectDuplicateLicense" parameterType="com.itwill.billycar.vo.LicenseVO" resultType="boolean">
	    SELECT COUNT(*) 
	    FROM license
	    WHERE license_user_id = #{license_user_id}
	</select>
	
	<update id="updatePasswd">
		UPDATE member
		SET
			member_passwd = #{member_passwd}
		WHERE
			member_id = #{member_id}
	</update>
	
	<update id="updatePasswd2">
		UPDATE member
		SET
			member_passwd = #{member_passwd}
		WHERE
			member_id = #{member_id}
	</update>
	
	<select id="selcetMemberCoupon" resultType="hashmap">

		SELECT c.coupon_name , c.coupon_code ,c.coupon_discount_amount, ci.coupon_used_status
		FROM coupon c JOIN coupon_issue ci
		ON c.coupon_id  = ci.coupon_id 
		WHERE ci.member_id = #{member_id};
		
	</select>
	
</mapper>
